UDP udp;

IPAddress UpNPIP(239, 255, 255, 250);
int UpNPPort = 1900;

void setup() {
    String searchPacket = "M-SEARCH * HTTP/1.1\r\n";
    searchPacket.concat("HOST: 239.255.255.250:1900\r\n");
    searchPacket.concat("MAN: \"ssdp:discover\"\r\n");
    searchPacket.concat("MX: ");
    searchPacket.concat("5");
    searchPacket.concat("\r\n");
    searchPacket.concat("ST: ");
    searchPacket.concat("urn:Belkin:device:controllee:1");
    searchPacket.concat("\r\n");
    searchPacket.concat("\r\n");
    Serial.println("Sending:");
    Serial.print(searchPacket);
    Serial.println();
    udp.begin(1901);
    udp.beginPacket(UpNPIP, UpNPPort);
    udp.write(searchPacket);
    udp.endPacket();
    unsigned long startTime = millis();
    unsigned long tOut = 5000;
    while(millis() < startTime + tOut){
        int packetSize = 0;
        packetSize = udp.parsePacket();
        if(packetSize != 0){
            Serial.println("Device discovered");
            byte packetBuffer[packetSize+1];
            udp.read(packetBuffer, packetSize);
            String deviceData = String((char *)packetBuffer);
            Serial.print(deviceData);
            Serial.println();
        }
    }
}

void loop() {

}


---

web client code

setup() {

  // if you get a connection, report back via serial:
  if (client.connect(server, 80)) {
    Serial.println("connected");
    // Make a HTTP request:
    client.println("GET /search?q=arduino HTTP/1.1");
    client.println("Host: www.google.com");
    client.println("Connection: close");
    client.println();
  } else {
    // if you didn't get a connection to the server:
    Serial.println("connection failed");
  }
}

void loop() {
  // if there are incoming bytes available
  // from the server, read them and print them:
  if (client.available()) {
    char c = client.read();
    Serial.print(c);
  }

  // if the server's disconnected, stop the client:
  if (!client.connected()) {
    Serial.println();
    Serial.println("disconnecting.");
    client.stop();

    // do nothing forevermore:
    while (true);
  }
}

